swagger: '2.0'
info:
  version: 1.0.0
  title: Swagger Petstore
paths:
  /test/{pathParam}/${inlinePathParam}:
    get:
      parameters:
        - $ref: '#/parameters/PathParam'
        - $ref: '#/parameters/QueryParam'
        - $ref: '#/parameters/CSVQueryParam'
        - name: inlinePathParam
          in: path
          required: true
          type: string
        - name: inlineQueryParam
          in: query
          required: true
          type: number
        - name: currenttime
          in: query
          type: string
          format: date-time
        - name: bodyParam
          in: body
          schema:
            $ref: '#/definitions/local'
        - name: inlineQueryArrayParam
          in: query
          required: true
          type: array
          items:
            type: string
        - name: inlineQueryMultiParam
          in: query
          type: array
          items:
            type: integer
          collectionFormat: multi
        - in: header
          name: Custom-Header
          required: true
          type: string
        - in: header
          name: Custom-Header-Two
          required: false
          type: string
        - in: header
          name: Custom-Header-Three
          required: true
          type: array
          items:
            type: string
      operationId: test
      responses:
        200:
          $ref: '#/responses/Successful'
        404:
          $ref: '#/responses/NotFound'
        400:
          $ref: '#/responses/IllegalInput'
        500:
          $ref: '#/responses/GeneralErrorResponse'
    post:
      operationId: testSharedparameters
      responses:
        200:
          $ref: '#/responses/Successful'
          404:
            $ref: '#/responses/NotFound'
          400:
            $ref: '#/responses/IllegalInput'
          500:
            $ref: '#/responses/GeneralErrorResponse'
    parameters:
      - $ref: '#/parameters/PathParam'
      - $ref: '#/parameters/QueryParam'
      - name: inlinePathParam
        in: path
        required: true
        type: string
      - name: inlineQueryParam
        in: query
        required: true
        type: number
  /shared-path-item:
    $ref: '../../arbitrary.yml#/SharedPathItem'
  /file/{filedId}/version/{version}:
    parameters:
      - in: path
        type: number
        required: true
        name: filedId
      - in: path
        type: number
        required: true
        name: version
    get:
      tags:
        - files
      summary: GetSomeFile
      operationId: getFile
      produces:
        - application/octet-stream
      responses:
        200:
          description: succesfull operation
          schema:
            type: string
            format: binary
  /fileWithResponseRef:
    get:
      tags:
        - files
      summary: GetFileWithResponseRef
      operationId: getFileWithResponseRef
      produces:
        - application/octet-stream
      responses:
        200:
          $ref: '#/responses/SuccessfulFile'
  /fileWithSchemaRef:
    get:
      tags:
        - files
      summary: GetFileWithSchemaRef
      operationId: getFileWithSchemaRef
      produces:
        - application/octet-stream
      responses:
        200:
          description: succesfull operation
          schema:
            $ref: '#/definitions/File'
  /text/{textId}/version/{version}:
    parameters:
      - in: path
        type: number
        required: true
        name: textId
      - in: path
        type: number
        required: true
        name: version
    get:
      tags:
        - text
      summary: GetSomeText
      operationId: getText
      produces:
        - text/plain
      responses:
        200:
          description: succesfull operation
          schema:
            type: string
  /textWithResponseRef:
    get:
      tags:
        - text
      summary: GetTextWithResponseRef
      operationId: getTextWithResponseRef
      produces:
        - text/plain
      responses:
        200:
          $ref: '#/responses/SuccessfulText'
  /textWithSchemaRef:
    get:
      tags:
        - text
      summary: GetTextWithSchemaRef
      operationId: getTextWithSchemaRef
      produces:
        - text/plain
      responses:
        200:
          description: succesfull operation
          schema:
            $ref: '#/definitions/Text'
definitions:
  Id:
    type: integer
  File:
    type: string
    format: binary
  Text:
    type: string
  local:
    type: object
    required:
      - pets
      - self
      - nested
    properties:
      pets:
        type: array
        items:
          "$ref": "./common.yml#/definitions/Pet"
      self:
        $ref: '#/definitions/local'
      nested:
        type: object
        required:
          - nested2
        properties:
          nested2:
            type: object
            required:
              - nested3
            properties:
              nested3:
                $ref: '#/definitions/local'
      allOfProp:
        allOf:
          - $ref: '#/definitions/local'
          - $ref: './common.yml#/definitions/Pet'
  GeneralError:
    type: object
parameters:
  PathParam:
    name: pathParam
    in: path
    required: true
    type: string
  QueryParam:
    name: queryParam
    in: query
    type: number
  CSVQueryParam:
    name: csvQueryParam
    in: query
    type: array
    items:
      type: integer
  HeaderParam:
    name: headerParam
    in: header
    type: boolean
responses:
  Successful:
    description: succesful operation
  NotFound:
    description: Entity not found.
  IllegalInput:
    description: Illegal input for operation.
  GeneralErrorResponse:
    description: General Error
    schema:
      $ref: '#/definitions/GeneralError'
  SuccessfulFile:
    description: succesful file data loading
    schema:
      $ref: '#/definitions/File'
  SuccessfulText:
    description: succesful text data loading
    schema:
      $ref: '#/definitions/Text'
